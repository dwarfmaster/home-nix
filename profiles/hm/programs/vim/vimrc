
"  __  __ _          
" |  \/  (_)___  ___ 
" | |\/| | / __|/ __|
" | |  | | \__ \ (__ 
" |_|  |_|_|___/\___|
"                    
set tabstop=4 shiftwidth=4 expandtab
set autoindent
set mouse=a                             " Enable mouse
set exrc                                " Allow project local .vimrc files
set modeline                            " Read vim commands integrated in files
set secure                              " Restrict commands in project-local vimrc
set encoding=utf-8                      " Default text encoding
set noshowmode                          " Don't show the current mode, already show by lightline
set ttyfast                             " Make scrolling smoother
set backspace=indent,eol,start          " What can be remove by backspace
set relativenumber                      " Show line number relatively to current
set number                              " Show absolute line number
set undofile                            " Create a .un~ file saving undos accross openings
set listchars+=nbsp:~,tab:>.            " Show unbreakable spaces in list mode
set completeopt=longest,menuone,preview " Completing window option
set guicursor=                          " Disable cursor change in insert mode
set hidden                              " Can open new buffer while the current one is not saved
let mapleader=' '                       " Leader key is space
let maplocalleader=','                  " Local leader is ,



"   ____      _                     _                         
"  / ___|___ | | ___  _ __ ___  ___| |__   ___ _ __ ___   ___ 
" | |   / _ \| |/ _ \| '__/ __|/ __| '_ \ / _ \ '_ ` _ \ / _ \
" | |__| (_) | | (_) | |  \__ \ (__| | | |  __/ | | | | |  __/
"  \____\___/|_|\___/|_|  |___/\___|_| |_|\___|_| |_| |_|\___|
"                                                             
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
let g:lightline = {
    \ 'colorscheme': 'stylix',
    \ }

"  ____                      _     
" / ___|  ___  __ _ _ __ ___| |__  
" \___ \ / _ \/ _` | '__/ __| '_ \ 
"  ___) |  __/ (_| | | | (__| | | |
" |____/ \___|\__,_|_|  \___|_| |_|
"                                  
" Use perl-like regex when searching
noremap  / /\v
vnoremap / /\v
set hlsearch   " Highlight search results
set incsearch  " Start searching while typing
set ignorecase " Ignore case ...
set smartcase  " ... unless there is at least one maj
set gdefault   " :%s/// -> :%s///g


"  _                        _ _                 
" | |    ___  _ __   __ _  | (_)_ __   ___  ___ 
" | |   / _ \| '_ \ / _` | | | | '_ \ / _ \/ __|
" | |__| (_) | | | | (_| | | | | | | |  __/\__ \
" |_____\___/|_| |_|\__, | |_|_|_| |_|\___||___/
"                   |___/                       
set wrap          " Wrap too long lines
set linebreak     " Don't wrap lines in the middle of a word
set showbreak=+++ " Prefix long line return with


"  _____ _ _      _                         
" |  ___(_) | ___| |_ _   _ _ __   ___  ___ 
" | |_  | | |/ _ \ __| | | | '_ \ / _ \/ __|
" |  _| | | |  __/ |_| |_| | |_) |  __/\__ \
" |_|   |_|_|\___|\__|\__, | .__/ \___||___/
"                     |___/|_|              
" Arduino files
au BufNewFile,BufRead *.pde setfiletype cpp
au BufNewFile,BufRead *.ino setfiletype cpp


